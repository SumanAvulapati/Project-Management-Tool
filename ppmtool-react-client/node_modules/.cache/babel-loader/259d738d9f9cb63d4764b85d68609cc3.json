{"ast":null,"code":"import _objectSpread from \"E:\\\\PPMT\\\\ppmtool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return _objectSpread({}, state, {\n        project_tasks: action.payload\n      });\n\n    case GET_PROJECT_TASK:\n      return _objectSpread({}, state, {\n        project_task: action.payload\n      });\n\n    case DELETE_PROJECT_TASK:\n      return _objectSpread({}, state, {\n        project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/PPMT/ppmtool-react-client/src/reducers/backlogReducer.js"],"names":["GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","initialState","project_tasks","project_task","state","action","type","payload","filter","projectSequence"],"mappings":";AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,mBAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,EADI;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAFxB;;AAKF,SAAKR,gBAAL;AACE,+BACKK,KADL;AAEED,QAAAA,YAAY,EAAEE,MAAM,CAACE;AAFvB;;AAKF,SAAKP,mBAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBM,MAApB,CACbL,YAAY,IAAIA,YAAY,CAACM,eAAb,KAAiCJ,MAAM,CAACE,OAD3C;AAFjB;;AAOF;AACE,aAAOH,KAAP;AAtBJ;AAwBD","sourcesContent":["import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}